<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="5.munit-mock-when-test-suite.xml" />
	<munit:test name="animalsGETRequestSuccessTestCase" doc:id="d9b4dbb2-26f4-467f-af43-3cc6e0a0cd1e" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when -HTTP GET Request" doc:id="cb8e9a83-6ca0-4405-9763-a536f18f1e3c" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="GET Request-getAnimalsListPayload" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"animals":[&#10;		"animal": "cow",&#10;		"animal": "pig"&#10;	]&#10;}]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAnimals" doc:id="65da3923-8556-4e66-b958-25a13eb3c3df" name="getAnimals"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Log VALIDATION PAYLOAD" doc:id="6b2f2340-5372-4d38-92ba-b032781ad0e1" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"Log VALIDATION PAYLOAD": payload&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="setPetNameSuccessTestCase" doc:id="b3b896b2-5f26-49d9-b318-e8d15bcd53b6" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as ZEUS" doc:id="2fc52fd0-093e-4483-8c1a-0ffd6f5f7464" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value='#["ZEUS"]' />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="cd1a963d-ff26-48bf-a2b9-4f0a249c6905" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="78fda3b5-f884-4ef0-968b-b933889af264" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="resetPetNameAfterNullSuccessTestCase" doc:id="0008475a-f738-419c-a50b-21be41a83fcc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - set variable Pet Name as Null" doc:id="6813b582-5056-41fb-b41e-e3575e4607a0" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Variable - myPetName" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="myPetName" value="#[null]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getPetName" doc:id="5218d29f-beb2-4251-b0e1-037f3b390652" name="getPetName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION VARIABLE" doc:id="556bc8b8-667b-4459-a158-7e4e9d974d51" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_variable_validation_scope": vars.myPetName&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="getFruitsSuccessTestCase" doc:id="63af0df9-6c34-48cf-b125-324b21a10dfa" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - Flow Reference - generateFruitsName" doc:id="44d0273c-d96a-41e9-8233-cf97b56d51dc" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="generateFruitsName" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[["banana", "orange","apple"]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getFruitsName" doc:id="3ce47f6b-7a90-4c1a-b351-d5c19f1d757e" name="getFruitsName"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Logger VALIDATION PAYLOAD" doc:id="30632848-f82b-42ad-a651-2cee3044c937" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"log_payload_validation_scope": payload&#10;}]' />
		</munit:validation>
	</munit:test>


</mule>
