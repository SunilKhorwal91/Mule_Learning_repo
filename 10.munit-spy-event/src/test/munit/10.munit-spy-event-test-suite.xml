<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="10.munit-spy-event-test-suite.xml" />
	<munit:test name="getRandomNumberSuccessTestCase" doc:id="6558681e-44ef-456e-b468-528e4d9e5004" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="generateRandomNumber" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:spy doc:name="Spy - HTTP Request" doc:id="87db3d1e-48cb-4dea-9204-993b68adee09" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="/randomNumber" attributeName="path" />
					<munit-tools:with-attribute whereValue="/randomNumber" attributeName="path" />
					<munit-tools:with-attribute whereValue="/randomNumber" attributeName="path" />
					<munit-tools:with-attribute whereValue="/randomNumber" attributeName="path" />
					<munit-tools:with-attribute whereValue="/randomNumber" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<logger level="INFO" doc:name="Log BEFORE CALL" doc:id="92bcef84-a9ef-4202-b3ff-507daec08dee" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"before_call": payload&#10;}]'/>
					<munit-tools:assert-that doc:name="Assert that - payload is NULL" doc:id="4d594baf-3366-41cc-9e00-58a9837c0cd3" is="#[MunitTools::nullValue()]" expression="#[payload]"/>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<logger level="INFO" doc:name="Log AFTERCALL" doc:id="ec0c7a44-bac2-4f60-96d3-9f6378acfdaf" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"after_call": payload&#10;}]'/>
					<munit-tools:assert-that doc:name="Assert that - payload is not null" doc:id="73d02f49-aee5-4f83-9e2a-ae9680dda2ab" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getRandomNumber" doc:id="fe30fd8b-2eff-452d-9c62-091e79dd8665" name="getRandomNumber"/>
		</munit:execution>
	</munit:test>
	<munit:test name="getStringLengthSuccessTestCase" doc:id="f6868b20-9247-4c71-84c9-24f0c4a10260" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - payload string" doc:id="ce3a45b0-0827-4809-bb42-4f6e544ff227" processor="set-payload">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Payload - Sample" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#['testing']" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<set-variable value='#["678910"]' doc:name="Set Variable - modifyVariable" doc:id="0dab0f88-5d49-4b65-b24e-3515c7d0f11a" variableName="modifyVariable"/>
			<munit-tools:spy doc:name="Spy - Transformer" doc:id="c24ce12b-c8d5-4f86-8f4e-de83d456efee" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<logger level="INFO" doc:name="Log BEFORE CALL" doc:id="2ee5b63e-8e59-47b6-8e4f-a56a94f63c00" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"before_call": payload&#10;}]'/>
					<set-variable value='#["12345"]' doc:name="Set Variable - update modifyVariable" doc:id="a84687ef-2424-467f-878d-cb464976ae62" variableName="modifyVariable"/>
					<munit-tools:assert doc:name="Assert expression - payload is string" doc:id="11b9a03e-7c1d-4849-bbca-7bbdcb61006e" >
						<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must beString()]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<logger level="INFO" doc:name="Log AFTERCALL" doc:id="a99345c2-d2d2-4ba4-a9b3-11691c0344f9" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"after_call": payload&#10;}]'/>
					<munit-tools:assert doc:name="Assert expression - payload is number" doc:id="44712055-1b05-417d-bd3f-15ed7800c78d" >
						<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must beNumber()]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getStringLength" doc:id="72901349-4aa5-4f10-a6fb-5f8e27ca5667" name="getStringLength"/>
		</munit:execution>
		<munit:validation >
			<logger level="INFO" doc:name="Log VALIDATION modifyVariable" doc:id="035cd2ab-0371-4faf-b2de-c5b98f19ecca" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"modifyVariable": vars.modifyVariable&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="getStringLengthInsuccessTestCase" doc:id="63b81504-e8c7-4ff2-966e-f2e4855cd09e" expectedErrorType="MULE:CRITICAL">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when - payload number" doc:id="cd879838-a6a1-4e8f-9e53-ba8a513cabc2" processor="set-payload">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Set Payload - Sample" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[23232323]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy - Transformer" doc:id="5340ab87-22cf-45ee-8ad8-8d6d60248ade" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Calculate String Length" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<logger level="INFO" doc:name="Log BEFORE CALL" doc:id="62b00fad-e4cd-4de8-8c3d-14e84a953f3a" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"before_call": payload&#10;}]'/>
					<munit-tools:assert doc:name="Assert expression - payload is String" doc:id="712bf2af-e0a7-4692-864d-6542e8092404" >
						<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must beString()]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<logger level="INFO" doc:name="Log AFTER CALL" doc:id="aa088c92-8c62-40a7-bb51-6d3811c6efb4" message='#[%dw 2.0&#10;&#10;&#10;output application/json&#10;---&#10;{&#10;	"after_call": payload&#10;}]'/>
					<munit-tools:assert doc:name="Assert expression- payload is Number" doc:id="7ae8643e-a2f5-4a54-a4bb-e0854c4c27e3" >
						<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must beNumber()]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-Ref to getStringLength" doc:id="62a49c53-3370-4dc0-b62d-6e71d793b0f6" name="getStringLength"/>
		</munit:execution>
	</munit:test>


</mule>
